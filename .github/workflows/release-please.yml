name: release-please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          default-branch: main
          release-type: simple
          package-name: release-please-action
          include-v-in-tag: false
          bump-minor-pre-major: true
          bump-patch-for-minor-pre-major: true
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.release_created }}
      - uses: ./.github/actions/gradle
        if: ${{ steps.release.outputs.release_created }}
      - name: generate artifacts
        if: ${{ steps.release.outputs.release_created }}
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          PGP_KEY_ID: ${{ secrets.PGP_KEY_ID }}
          PGP_SIGNING_KEY: ${{ secrets.PGP_SIGNING_KEY }}
          PGP_SIGNING_PASSWORD: ${{ secrets.PGP_SIGNING_PASSWORD }}
        shell: bash
        run: |
          ./gradlew publishReleasePublicationToLocalRepository --scan
      - name: zip artifacts
        shell: bash
        run: |
          find . -type f -name 'maven-metadata.xml*' -delete;
          cp -r ./releases/maven ./releases/moshi;
          rm -rf ./releases/moshi/io/github/ryunen344/webauthn/webauthn2-json-serialization;
          cp -r ./releases/maven ./releases/serialization;
          rm -rf ./releases/serialization/io/github/ryunen344/webauthn/webauthn2-json-moshi;
          zip -r moshi.zip ./releases/moshi -x "*.DS_Store" "*__MACOSX*";
          zip -r serialization.zip ./releases/serialization -x "*.DS_Store" "*__MACOSX*";
      - name: uploads artifacts
        shell: bash
        run: |
          gh release upload ${{ steps.release.outputs.tag_name }} moshi.zip serialization.zip --clobber
